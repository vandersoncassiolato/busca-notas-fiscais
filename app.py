import streamlit as st
import pandas as pd
from PyPDF2 import PdfReader
import pytesseract
from PIL import Image
import pdf2image
import io
import os
import tempfile
import xml.etree.ElementTree as ET
from pathlib import Path
import zipfile
import base64

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Hiper Center - Busca em Notas Fiscais",
    page_icon="üîç",
    layout="wide"
)

def reiniciar_sistema():
    """
    Reinicia o sistema limpando a sess√£o
    """
    for key in list(st.session_state.keys()):
        del st.session_state[key]

# [Manter todas as fun√ß√µes anteriores: extrair_texto_xml, extrair_texto_pdf, etc.]

def main():
    st.title("Hiper Center - üîç Busca em Notas Fiscais")
    
    # Instru√ß√µes de uso (agora fechado por padr√£o)
    with st.expander("‚ÑπÔ∏è Como usar", expanded=False):
        st.markdown("""
            **Selecione os arquivos de uma das formas:**
            1. Arraste uma pasta inteira para a √°rea de upload
            2. Selecione m√∫ltiplos arquivos
            3. Combine as duas op√ß√µes anteriores
            
            **Ap√≥s selecionar:**
            1. Aguarde o processamento dos arquivos
            2. Digite o nome do produto que deseja buscar
            3. Clique em 'Buscar'
            4. Use os bot√µes de download conforme necess√°rio:
               - Download individual de cada nota
               - Download em ZIP de todas as notas encontradas
            
            **Tipos de arquivo suportados:**
            - PDFs (digitais ou escaneados)
            - XMLs de Nota Fiscal Eletr√¥nica (NFe)
            
            **Dicas:**
            - Voc√™ pode arrastar uma pasta inteira do seu computador
            - Para selecionar m√∫ltiplos arquivos:
              - Windows: Ctrl + clique
              - Mac: Command + clique
            """)
    
    # √Årea √∫nica de upload com bot√£o reiniciar
    st.header("üìÅ Selecione os arquivos ou pasta")
    
    # Bot√£o Reiniciar
    if st.button("üîÑ Reiniciar", type="primary"):
        reiniciar_sistema()
        st.rerun()
    
    # CSS para os bot√µes (agora branco com texto preto)
    st.markdown("""
        <style>
        .download-button {
            display: inline-block;
            padding: 0.5rem 1rem;
            background-color: white !important;
            color: black !important;
            text-decoration: none;
            border-radius: 4px;
            transition: background-color 0.3s;
            border: 1px solid #ddd;
        }
        .download-button:hover {
            background-color: #f8f9fa !important;
        }
        .download-button-small {
            display: inline-block;
            padding: 0.3rem 0.7rem;
            background-color: white !important;
            color: black !important;
            text-decoration: none;
            border-radius: 4px;
            transition: background-color 0.3s;
            font-size: 0.9em;
            border: 1px solid #ddd;
        }
        .download-button-small:hover {
            background-color: #f8f9fa !important;
        }
        
        /* Estilo para bot√µes Streamlit padr√£o */
        .stButton > button {
            background-color: white !important;
            color: black !important;
            border: 1px solid #ddd !important;
        }
        .stButton > button:hover {
            background-color: #f8f9fa !important;
            border: 1px solid #ddd !important;
        }
        </style>
    """, unsafe_allow_html=True)
    
    # [Continuar com o resto do c√≥digo existente...]

if __name__ == "__main__":
    main()
